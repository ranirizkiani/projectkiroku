[{"/Users/ahmadizzan/code/rani/projectkiroku/src/index.js":"1","/Users/ahmadizzan/code/rani/projectkiroku/src/App.js":"2","/Users/ahmadizzan/code/rani/projectkiroku/src/pages/Task.js":"3","/Users/ahmadizzan/code/rani/projectkiroku/src/pages/Addtask.js":"4","/Users/ahmadizzan/code/rani/projectkiroku/src/components/layout/AppLayout.jsx":"5","/Users/ahmadizzan/code/rani/projectkiroku/src/components/sidebar/Sidebar.jsx":"6","/Users/ahmadizzan/code/rani/projectkiroku/src/pages/LandCheck.js":"7","/Users/ahmadizzan/code/rani/projectkiroku/src/components/PostForm.js":"8","/Users/ahmadizzan/code/rani/projectkiroku/src/components/Table.js":"9","/Users/ahmadizzan/code/rani/projectkiroku/src/components/Header.js":"10","/Users/ahmadizzan/code/rani/projectkiroku/src/components/Button.js":"11"},{"size":207,"mtime":1646837350773,"results":"12","hashOfConfig":"13"},{"size":686,"mtime":1646842417500,"results":"14","hashOfConfig":"13"},{"size":822,"mtime":1646840252479,"results":"15","hashOfConfig":"13"},{"size":2436,"mtime":1646837350773,"results":"16","hashOfConfig":"13"},{"size":264,"mtime":1646837350772,"results":"17","hashOfConfig":"13"},{"size":2355,"mtime":1646842546255,"results":"18","hashOfConfig":"13"},{"size":670,"mtime":1646842927043,"results":"19","hashOfConfig":"13"},{"size":8191,"mtime":1646842946004,"results":"20","hashOfConfig":"13"},{"size":1452,"mtime":1646842756326,"results":"21","hashOfConfig":"13"},{"size":176,"mtime":1646842911596,"results":"22","hashOfConfig":"13"},{"size":193,"mtime":1646842895002,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1jenx88",{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"29"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"/Users/ahmadizzan/code/rani/projectkiroku/src/index.js",[],"/Users/ahmadizzan/code/rani/projectkiroku/src/App.js",["51"],"import './App.scss';\nimport 'boxicons/css/boxicons.min.css';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport AppLayout from './components/layout/AppLayout';\nimport React from 'react';\nimport Task from './pages/Task.js';\nimport Addtask from './pages/Addtask.js';\nimport LandCheck from './pages/LandCheck';\n\nfunction App() {\n    return (\n        <BrowserRouter>\n            <Routes>\n                <Route path='/' element={<AppLayout />}>\n                    <Route index element={<LandCheck />} />\n                    <Route path='/task' element={<Task />} />\n                </Route>\n            </Routes>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n",["52","53"],"/Users/ahmadizzan/code/rani/projectkiroku/src/pages/Task.js",[],["54","55"],"/Users/ahmadizzan/code/rani/projectkiroku/src/pages/Addtask.js",["56"],"/Users/ahmadizzan/code/rani/projectkiroku/src/components/layout/AppLayout.jsx",[],"/Users/ahmadizzan/code/rani/projectkiroku/src/components/sidebar/Sidebar.jsx",[],"/Users/ahmadizzan/code/rani/projectkiroku/src/pages/LandCheck.js",[],"/Users/ahmadizzan/code/rani/projectkiroku/src/components/PostForm.js",["57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75"],"import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Button from './Button.js'\n\nimport Table from './Table.js';\n// import PostForm from './components/PostForm.jsx'\n\n/*\n\n37.1719383999999,140.0346593,\n36.99277,140.77859,\n35.9937171,140.5333251,\n35.7952537,140.6386735,\n35.9022891,139.3134128,\n35.5461953,138.9399811,\n35.468426,138.751466,\n35.1826928,138.5707699,\n34.792018,138.118217,\n34.88268,135.05066,\n34.845717,134.001141,\n34.5112827,133.7908678\n\n*/\n\nconst dummyData = {\n    \"result\": [\n        {\n            \"hazard_info\": {\n                \"fourth_mesh_code\": 533946304,\n                \"土砂災害危険箇所\": 1,\n                \"土砂災害警戒区域\": 0,\n                \"塩害\": 0,\n                \"津波浸水想定\": 0,\n                \"洪水浸水想定区域\": 0,\n                \"重塩害\": 0\n            },\n            \"land_info\": {\n                \"fourth_mesh_code\": 644125502,\n                \"基準風速\": 1,\n                \"積雪量\": 0,\n                \"空き容量\": 2\n            },\n            \"meshcode\": 644125502\n        },\n        {\n            \"hazard_info\": {\n                \"fourth_mesh_code\": 644125502,\n                \"土砂災害危険箇所\": 0,\n                \"土砂災害警戒区域\": 0,\n                \"塩害\": 0,\n                \"津波浸水想定\": 0,\n                \"洪水浸水想定区域\": 1,\n                \"重塩害\": 0\n            },\n            \"land_info\": {\n                \"fourth_mesh_code\": 533946304,\n                \"基準風速\": 1,\n                \"積雪量\": 0,\n                \"空き容量\": 2\n            },\n            \"meshcode\": 533946304\n        }\n    ],\n    \"status\": 200\n}\n\nfunction PostForm() {\n    const url = \"\"\n\n    // inputs\n    const [roleId, setRoleId] = useState('')\n    const [coordinates, setCoordinates] = useState('')\n    const [address, setAddress] = useState('')\n\n    // table data\n    const [data, setData] = useState([])\n\n    function handleApiResponse(responseData) {\n        let result = responseData['result']\n        let tableData = []\n\n        /*\n            0 -> ✕\n            1 -> 〇\n            2 -> △（空き容量のみ）\n            3 -> 情報なし\n\n        */\n\n        for (let x of result) {\n\n            // generate col1 value => meshcode\n            let col1Val = x['land_info']['fourth_mesh_code']\n\n            // generate col2 value => coordinate\n            let col2Val = x['lat'].toString() + ',' + x['lon'].toString()\n\n            // generate col3 value => kijunfusoku\n            let col3Val = ''\n            if (x['land_info']['基準風速'] == 0) {\n                col3Val = '✕'\n            } else if (x['land_info']['基準風速'] == 1) {\n                col3Val = '〇'\n            } else if (x['land_info']['基準風速'] == 2) {\n                col3Val = '△'\n            } else if (x['land_info']['基準風速'] == 3) {\n                col3Val = '無し'\n            }\n\n            // generate col4 value => sekisetsuryou\n            let col4Val = ''\n            if (x['land_info']['積雪量'] == 0) {\n                col4Val = '✕'\n            } else if (x['land_info']['積雪量'] == 1) {\n                col4Val = '〇'\n            } else if (x['land_info']['積雪量'] == 2) {\n                col4Val = '△'\n            } else if (x['land_info']['積雪量'] == 3) {\n                col4Val = '無し'\n            }\n\n            // generate col5 value => akiyouryou\n            let col5Val = ''\n            if (x['land_info']['空き容量'] == 0) {\n                col5Val = '✕'\n            } else if (x['land_info']['空き容量'] == 1) {\n                col5Val = '〇'\n            } else if (x['land_info']['空き容量'] == 2) {\n                col5Val = '△'\n            } else if (x['land_info']['空き容量'] == 3) {\n                col5Val = '無し'\n            }\n\n            tableData.push({\n                'col_1': col1Val,\n                'col_2': col2Val,\n                'col_3': col3Val,\n                'col_4': col4Val,\n                'col_5': col5Val\n            })\n        }\n\n        setData(tableData)\n    }\n\n    function submitForm(e) {\n        // sample input: 1.12,2.34 5.23,4.43\n        e.preventDefault();\n\n        // Process roleId\n        let parsedRoleId = parseInt(roleId, 10);\n\n        // Process coordinates\n        // sample input: \"1.2,4.5 4.3,2.1\"\n        // sample output: [\"1.2,4.5\", \"4.3,2.1\"]\n        let parsedCoordinates = []\n        if (coordinates.length > 0) {\n            let lines = coordinates.split(\"\\n\")\n            for (let line of lines) {\n                if (line.charAt(line.length - 1) == ',') {\n                    parsedCoordinates.push(line.slice(0, -1))\n                } else {\n                    parsedCoordinates.push(line)\n                }\n            }\n        }\n\n        console.log(parsedCoordinates)\n\n        // Process meshcodes\n        let parsedAddress = []\n        if (address.length > 0) {\n            let lines = address.split(\"\\n\")\n            for (let line of lines) {\n                if (line.charAt(line.length - 1) == ',') {\n                    parsedAddress.push(line.slice(0, -1))\n                } else {\n                    parsedAddress.push(line)\n                }\n            }\n        }\n        console.log(parsedAddress)\n\n        // Construct api request payload\n        let payload = {\n            'role_id': 1\n        }\n        if (parsedCoordinates.length > 0) {\n            payload['coordinate'] = parsedCoordinates\n        }\n        if (parsedAddress.length > 0) {\n            payload['address'] = parsedAddress\n        }\n\n        console.log(payload)\n        // Call API\n        axios.post('http://greenmap.afterfit.jp:8003/land_check', payload)\n            .then(function (response) {\n                // TODO: change dummy data to actual API response data\n                let data = response.data // response.data\n                handleApiResponse(data)\n            })\n            .catch(function (error) {\n                console.log('ERROR...')\n                alert('Error')\n                console.log(error)\n\n                // TODO: delete this\n                let data = dummyData\n                handleApiResponse(data)\n            });\n    }\n\n    function handleRoleId(e) {\n        setRoleId(e.target.value)\n    }\n\n    function handleCoordinates(e) {\n        setCoordinates(e.target.value)\n    }\n\n    function handleMeshCodes(e) {\n        setCoordinates(e.target.value)\n    }\n\n    function handleAddress(e) {\n        setAddress(e.target.value)\n    }\n\n    function resetTable() {\n        // alert('reset!!')\n        setData([])\n    }\n\n    // alert(data)\n\n    return (\n        <div>\n            <div>\n                <form onSubmit={(e) => submitForm(e)}>\n\n                    <div className=\"formInput\">\n                        <div>\n                            <label>住所</label>\n                            <br />\n                            <textarea\n                                onChange={(e) => handleAddress(e)}\n                                id=\"address\"\n                                placeholder=\"住所を送信してください\"\n                                name=\"address\"\n                                cols=\"25\"\n                                rows=\"5\" />\n                        </div>\n\n                        <div>\n                            <label>経度緯度</label>\n                            <br />\n                            <textarea\n                                onChange={(e) => handleCoordinates(e)}\n                                id=\"coordinates\"\n                                placeholder=\"経度緯度を送信してください\"\n                                name=\"coordinates\"\n                                cols=\"25\"\n                                rows=\"5\" />\n                        </div>\n                    </div>\n\n                    <div>\n                        <br /> <Button>送信</Button>\n\n                    </div>\n\n                </form>\n            </div >\n\n            <Table data={data} />\n\n            <button onClick={resetTable}>リセット</button>\n\n        </div >\n    );\n}\n\nexport default PostForm;","/Users/ahmadizzan/code/rani/projectkiroku/src/components/Table.js",["76","77"],"import React, { useEffect, useState } from 'react';\n\nfunction Table({ data }) {\n  /*\n  Table columns:\n  経度緯度（coordinate）、-> \"10.123132, 20.34543\"\n  空き容量（free substation space）、-> \n  積雪量（snow fall）、->\n  基準風速（reference wind speed）->\n \n \n  DATA FORMAT:\n  [    \n    {\n      'col_1': '12.34,54.65',\n      'col_2': 'aaa',\n      'col_3': 'bbb',\n      'col_4': 'ccc',\n    },\n    {\n      'col_1': '9.01,2.43',\n      'col_2': 'xxx',\n      'col_3': 'yyy',\n      'col_4': 'zzz',\n    },\n  ]\n  */\n\n  /*\n  let dummyData =   [    \n    {\n      'col_1': '12.34,54.65',\n      'col_2': 'aaa',\n      'col_3': 'bbb',\n      'col_4': 'ccc',\n    },\n    {\n      'col_1': '9.01,2.43',\n      'col_2': 'xxx',\n      'col_3': 'yyy',\n      'col_4': 'zzz',\n    },\n  ]\n  */\n\n  return (\n    <div className=\"app-container\">\n      <table>\n        <thead>\n          <tr>\n            <th>メッシュコード</th>\n            <th>経度緯度</th>\n            <th>基準風速</th>\n            <th>積雪量</th>\n            <th>空き容量</th>\n          </tr>\n        </thead>\n        <tbody>\n          {data.map((row) => (\n            <tr>\n              <td>{row['col_1']}</td>\n              <td>{row['col_2']}</td>\n              <td>{row['col_3']}</td>\n              <td>{row['col_4']}</td>\n              <td>{row['col_5']}</td>\n            </tr>\n          ))}\n\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nexport default Table;","/Users/ahmadizzan/code/rani/projectkiroku/src/components/Header.js",[],"/Users/ahmadizzan/code/rani/projectkiroku/src/components/Button.js",[],{"ruleId":"78","severity":1,"message":"79","line":7,"column":8,"nodeType":"80","messageId":"81","endLine":7,"endColumn":15},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"82","replacedBy":"86"},{"ruleId":"84","replacedBy":"87"},{"ruleId":"78","severity":1,"message":"88","line":23,"column":15,"nodeType":"80","messageId":"81","endLine":23,"endColumn":18},{"ruleId":"78","severity":1,"message":"89","line":1,"column":17,"nodeType":"80","messageId":"81","endLine":1,"endColumn":26},{"ruleId":"78","severity":1,"message":"90","line":68,"column":11,"nodeType":"80","messageId":"81","endLine":68,"endColumn":14},{"ruleId":"91","severity":1,"message":"92","line":100,"column":40,"nodeType":"93","messageId":"94","endLine":100,"endColumn":42},{"ruleId":"91","severity":1,"message":"92","line":102,"column":47,"nodeType":"93","messageId":"94","endLine":102,"endColumn":49},{"ruleId":"91","severity":1,"message":"92","line":104,"column":47,"nodeType":"93","messageId":"94","endLine":104,"endColumn":49},{"ruleId":"91","severity":1,"message":"92","line":106,"column":47,"nodeType":"93","messageId":"94","endLine":106,"endColumn":49},{"ruleId":"91","severity":1,"message":"92","line":112,"column":39,"nodeType":"93","messageId":"94","endLine":112,"endColumn":41},{"ruleId":"91","severity":1,"message":"92","line":114,"column":46,"nodeType":"93","messageId":"94","endLine":114,"endColumn":48},{"ruleId":"91","severity":1,"message":"92","line":116,"column":46,"nodeType":"93","messageId":"94","endLine":116,"endColumn":48},{"ruleId":"91","severity":1,"message":"92","line":118,"column":46,"nodeType":"93","messageId":"94","endLine":118,"endColumn":48},{"ruleId":"91","severity":1,"message":"92","line":124,"column":40,"nodeType":"93","messageId":"94","endLine":124,"endColumn":42},{"ruleId":"91","severity":1,"message":"92","line":126,"column":47,"nodeType":"93","messageId":"94","endLine":126,"endColumn":49},{"ruleId":"91","severity":1,"message":"92","line":128,"column":47,"nodeType":"93","messageId":"94","endLine":128,"endColumn":49},{"ruleId":"91","severity":1,"message":"92","line":130,"column":47,"nodeType":"93","messageId":"94","endLine":130,"endColumn":49},{"ruleId":"78","severity":1,"message":"95","line":151,"column":13,"nodeType":"80","messageId":"81","endLine":151,"endColumn":25},{"ruleId":"91","severity":1,"message":"92","line":160,"column":50,"nodeType":"93","messageId":"94","endLine":160,"endColumn":52},{"ruleId":"91","severity":1,"message":"92","line":175,"column":50,"nodeType":"93","messageId":"94","endLine":175,"endColumn":52},{"ruleId":"78","severity":1,"message":"96","line":214,"column":14,"nodeType":"80","messageId":"81","endLine":214,"endColumn":26},{"ruleId":"78","severity":1,"message":"97","line":222,"column":14,"nodeType":"80","messageId":"81","endLine":222,"endColumn":29},{"ruleId":"78","severity":1,"message":"89","line":1,"column":17,"nodeType":"80","messageId":"81","endLine":1,"endColumn":26},{"ruleId":"78","severity":1,"message":"98","line":1,"column":28,"nodeType":"80","messageId":"81","endLine":1,"endColumn":36},"no-unused-vars","'Addtask' is defined but never used.","Identifier","unusedVar","no-native-reassign",["99"],"no-negated-in-lhs",["100"],["99"],["100"],"'res' is assigned a value but never used.","'useEffect' is defined but never used.","'url' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'parsedRoleId' is assigned a value but never used.","'handleRoleId' is defined but never used.","'handleMeshCodes' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]